(function(){var a,b=Array.prototype.slice;a=function(){function f(){}var a,c,d,e;return f.prototype.CM_API_KEY="a82f9aaf9fca4a1aa2e81ff9c514f0b2",f.prototype.app={},f.prototype.log=function(){var a;a=1<=arguments.length?b.call(arguments,0):[];if(!productionEnv)return console.log.apply(console,a)},f.prototype.error=function(){var a;return a=1<=arguments.length?b.call(arguments,0):[],productionEnv?alert(a.join("")):console.error.apply(console,a)},f.prototype.util={loadTemplates:function(b,c){var f,g,h=this;if(e()){c();return}return d.ver=a(),f=$("<div/>"),g=function(a){var e,h;return h=b[a],Gaso.log("Loading template: "+h),e=f.find("#"+h).html(),e&&(d.tpls[h]=e),a++,a<b.length?g(a):(localStorage.setItem("Templates",JSON.stringify(d)),Gaso.log("Templates cached"),c())},$.get("templates",function(a){f.html(a);if(b==null||!b.length)b=f.find("script").map(function(){return this.id}).get();g(0)})},getTemplate:function(a){return d.tpls[a]},getDevicePosition:function(a,b){return c("getCurrentPosition",b,a)},watchDevicePosition:function(a,b){return c("watchPosition",b,a)}},d={ver:0,tpls:{}},a=function(){return window.tmplVer},e=function(){var b,c;b=localStorage.getItem("Templates");if(b)try{d=JSON.parse(b)}catch(e){console.error(e)}return c=a(),c&&d.ver===c},c=function(a,b,c){var d,e;return navigator.geolocation==null?c({code:-1,message:"Geolocation not supported on this browser."}):(d={enableHighAccuracy:!0,maximumAge:3e4,timeout:27e3},e=_.extend(d,b),navigator.geolocation[a](function(a){c(null,a)},function(a){c(a)},e))},f}(),window.Gaso=new a}).call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}};Gaso.Helper=function(){function c(b,c,d){this.user=b,this.stations=c,this.searchContext=d,this.getStationsDataNearby=a(this.getStationsDataNearby,this),this.getStationsDataWithinBounds=a(this.getStationsDataWithinBounds,this),this.updateDistances=a(this.updateDistances,this),this.calculateDistance=a(this.calculateDistance,this),this.stations.on("add",this.calculateDistance),this.user.on("change:position",this.updateDistances),this.user.on("reCenter",this.getStationsDataNearby)}var b;return c.prototype.calculateDistance=function(a){var b,c,d;d=this.user.get("position");if(d.lat==null||d.lon==null)return;c=a.getLatLng();if(c.lat==null||c.lon==null)return;return b=Gaso.geo.calculateDistanceBetween(d,c),a.set("directDistance",(b/1e3).toFixed(1))},c.prototype.updateDistances=function(){var a,b,c,d,e;d=this.stations.models,e=[];for(b=0,c=d.length;b<c;b++)a=d[b],e.push(this.calculateDistance(a));return e},c.prototype.getStationsDataWithinBounds=function(){return this.stations.fetch({add:!0,data:{bounds:this.searchContext.get("mapBounds")}})},c.prototype.getStationsDataNearby=function(){var a;return a=this.user.get("position"),this.stations.fetch({add:!0,data:{point:[a.lon,a.lat],radius:10}})},c.prototype.findStationsWithinGMapBounds=function(a){var c=this;return Gaso.geo.findFuelStations(a,function(a){return b(a,c.stations)})},b=function(a,b){var c,d,e,f,g,h;Gaso.log("CM data",a);if(a.features!=null){g=a.features,h=[];for(e=0,f=g.length;e<f;e++)c=g[e],d=c.properties,b.get(d.osm_id)==null?h.push(b.add({osmId:d.osm_id,name:d.name||"Unknown",location:[c.centroid.coordinates[1],c.centroid.coordinates[0]]})):h.push(void 0);return h}return Gaso.log("No 'features' in CM data",a)},c}()}.call(this),function(){var a;a=function(){function a(){this.cmGeocoder=new CM.Geocoder(Gaso.CM_API_KEY),this.gooGeocoder=new google.maps.Geocoder}return a.prototype.findFuelStations=function(a,b){var c;return c={objectType:"fuel",boundsOnly:!0,bounds:this.gMapBoundsToCMBounds(a),resultsNumber:20},this.cmGeocoder.getLocations("",b,c)},a.prototype.getAddress=function(a,b){var c;return b==null?Gaso.error("Callback is required for getAddress(loc, cb)"):(c=this.latLonTogMapLatLng(a),this.gooGeocoder.geocode({latLng:c},function(a,c){var d,e,f,g,h,i;return c===google.maps.GeocoderStatus.OK?(d=a[0],d?(h=d.formatted_address.split(","),f=h[1].replace(/\ /g,""),e=f.match(/\D+/),i=f.match(/\d+/),g={country:$.trim(h[2]),city:e!=null?e[0]:void 0,street:$.trim(h[0]),zip:i!=null?i[0]:void 0},b(g)):Gaso.log("No address found")):Gaso.error("Geocoder failed due to: ",c)}))},a.prototype.gMapBoundsToCMBounds=function(a){var b,c;return c=this.gMapLatLongToCMLatLong(a.getSouthWest()),b=this.gMapLatLongToCMLatLong(a.getNorthEast()),new CM.LatLngBounds(c,b)},a.prototype.gMapLatLongToCMLatLong=function(a){return new CM.LatLng(a.lat(),a.lng())},a.prototype.latLonTogMapLatLng=function(a){var b;_.isArray(a)?b={lat:a[1],lon:a[0]}:_.isObject(a)?b=a:Gaso.error("Invalid type to convert to LatLng:",a);if(b!=null)return new google.maps.LatLng(b.lat,b.lon)},a.prototype.calculateDistanceBetween=function(a,b){var c,d,e;return e=this.latLonTogMapLatLng(b),d=this.latLonTogMapLatLng(a),c=google.maps.geometry.spherical.computeDistanceBetween(d,e)},a}(),Gaso.geo=new a}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}},b=Object.prototype.hasOwnProperty,c=function(a,c){function e(){this.constructor=a}for(var d in c)b.call(c,d)&&(a[d]=c[d]);return e.prototype=c.prototype,a.prototype=new e,a.__super__=c.prototype,a};Gaso.Station=function(b){function e(){this.identifyBrand=a(this.identifyBrand,this),this.getLatLng=a(this.getLatLng,this),this.updatePrice=a(this.updatePrice,this),this.clear=a(this.clear,this),this.cleanupModel=a(this.cleanupModel,this),e.__super__.constructor.apply(this,arguments)}var d;return c(e,b),e.prototype.noIoBind=!1,e.prototype.socket=window.socket,e.prototype.url="station",e.prototype.idAttribute="osmId",e.prototype.defaults={brand:"",name:"",address:{country:"",city:"",street:"",zip:""},location:null,services:null,prices:null,directDistance:null,drivingDistance:null},e.prototype.setNonPrimitiveDefaults=function(a){var b;a.location==null&&this.set("location",[]),a.services==null&&this.set("services",[]),b=[{type:"95E10"},{type:"98E5"},{type:"Diesel"}];if(a.prices==null)return this.set("prices",b)},e.prototype.initialize=function(a){this.setNonPrimitiveDefaults(a);if(!a.brand)return this.identifyBrand(a.name)},e.prototype.cleanupModel=function(){return this.ioUnbindAll(),this},e.prototype.clear=function(){return this.trigger("clear"),this.destroy},e.prototype.updatePrice=function(a,b){var c,e;c=this.get("prices"),e=d(c,a,b);if(e)return this.trigger("change:prices",this)},e.prototype.updateAddress=function(){var a,b=this;a=this.get("location");if(a==null)return;if(this.get("street"))return;return Gaso.geo.getAddress(a,function(a){return b.set("address",a)})},e.prototype.getLatLng=function(){var a;return a=this.get("location"),{lat:a[1],lon:a[0]}},e.prototype.identifyBrand=function(a){Gaso.log("Identify brand from",a);if(/abc/ig.test(a))return this.set("brand","abc");if(/neste/ig.test(a))return this.set("brand","nesteoil");if(/teboil/ig.test(a))return this.set("brand","teboil");if(/st1|st.*1/ig.test(a))return this.set("brand","st1");if(/shell/ig.test(a))return this.set("brand","shell");if(/seo/ig.test(a))return this.set("brand","seo")},d=function(a,b,c){var d;return c?(c=parseFloat(c).toFixed(3),d=_.find(a,function(a){return a.type===b}),d==null?(a.push({type:b,value:c}),!0):d.value===c?!1:(d.value=c,!0)):!1},e}(Backbone.Model)}.call(this),function(){var a=Object.prototype.hasOwnProperty,b=function(b,c){function e(){this.constructor=b}for(var d in c)a.call(c,d)&&(b[d]=c[d]);return e.prototype=c.prototype,b.prototype=new e,b.__super__=c.prototype,b};Gaso.StationsList=function(a){function c(){c.__super__.constructor.apply(this,arguments)}return b(c,a),c.prototype.model=Gaso.Station,c.prototype.url="stations",c.prototype.socket=window.socket,c.prototype.comparator=function(a){var b,c;return b=(c=a.get("drivingDistance"))!=null?c:a.get("directDistance"),parseFloat(b)},c}(Backbone.Collection)}.call(this),function(){var a=Object.prototype.hasOwnProperty,b=function(b,c){function e(){this.constructor=b}for(var d in c)a.call(c,d)&&(b[d]=c[d]);return e.prototype=c.prototype,b.prototype=new e,b.__super__=c.prototype,b};Gaso.SearchContext=function(a){function c(){c.__super__.constructor.apply(this,arguments)}return b(c,a),c.prototype.defaults={routeFrom:{address:null,lon:null,lat:null},routeTo:null,searchAddress:null,mapBounds:{lon:null,lat:null}},c}(Backbone.Model)}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}},b=Object.prototype.hasOwnProperty,c=function(a,c){function e(){this.constructor=a}for(var d in c)b.call(c,d)&&(a[d]=c[d]);return e.prototype=c.prototype,a.prototype=new e,a.__super__=c.prototype,a};Gaso.User=function(b){function d(){this.updateUserPosition=a(this.updateUserPosition,this),this.centerOnPosition=a(this.centerOnPosition,this),d.__super__.constructor.apply(this,arguments)}return c(d,b),d.prototype.id="localUser",d.prototype.localStorage=new Backbone.LocalStorage("Gaso.User"),d.prototype.defaults={myFuelType:"95E10",positionAccuracy:null,position:{lat:null,lon:null},mapCenter:{lat:60.167,lon:24.955},mapZoom:14,mapTypeId:"ROADMAP"},d.prototype.initialize=function(){var a=this;Gaso.util.getDevicePosition(function(b,c){return b!=null?Gaso.log("Couldn't get initial device location.\nCode: "+b.code+"\nError: "+b.message):(a.updateUserPosition(null,c),a.centerOnPosition(a.get("position")))}),this.geoWatchID=Gaso.util.watchDevicePosition(this.updateUserPosition)},d.prototype.centerOnPosition=function(a){var b;b=_.extend({},a!=null?a:this.get("position")),this.set("mapCenter",b),this.trigger("reCenter")},d.prototype.updateUserPosition=function(a,b){var c;if(a!=null){switch(a.code){case a.TIMEOUT:Gaso.log("Device position watching timed out, retrying."),this.geoWatchID=Gaso.util.watchDevicePosition(this.updateUserPosition);break;default:Gaso.log("Couldn't update device location.\nCode: "+a.code+"\nError: "+a.message)}return}return c=b.coords,this.set("positionAccuracy",c.accuracy),this.set("position",{lat:c.latitude,lon:c.longitude}),this.save()},d.prototype.isPositionAccurate=function(){var a;return a=this.get("positionAccuracy"),a!=null&&a<1e4},d}(Backbone.Model)}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}},b=Object.prototype.hasOwnProperty,c=function(a,c){function e(){this.constructor=a}for(var d in c)b.call(c,d)&&(a[d]=c[d]);return e.prototype=c.prototype,a.prototype=new e,a.__super__=c.prototype,a};Gaso.StationsListPage=function(b){function d(b,c){this.collection=b,this.user=c,this.addStationListItem=a(this.addStationListItem,this),this.onCollectionAdd=a(this.onCollectionAdd,this),this.onUserFuelTypeChanged=a(this.onUserFuelTypeChanged,this),this.setActiveFuelTypeButton=a(this.setActiveFuelTypeButton,this),this.closeListItems=a(this.closeListItems,this),this.close=a(this.close,this),this.renderList=a(this.renderList,this),this.template=_.template(Gaso.util.getTemplate("list-page")),this.setElement($('<div id="page-list"/>'))}return c(d,b),d.prototype.events={"click #fueltypes button":"onSelectFuelType"},d.prototype.render=function(a){return this.$el.html(this.template(this.collection.toJSON())),this.$list=this.$el.find("ul#list-stations"),this.renderList(),this.bindEvents(),this.delegateEvents(),this},d.prototype.renderList=function(a){var b,c,d,e,f,g,h=this;this.closeListItems(),this.listItems=[],console.log("DEBUG collection order during list render()",this.collection.models.map(function(a){return a.get("directDistance")})),c=[],g=this.collection.models;for(e=0,f=g.length;e<f;e++)d=g[e],b=$("<div/>").append(this.addStationListItem(d).$el),c.push(b.html());return a?this.$list.fadeOut(function(){return h.$list.html(c.join("")),h.$list.listview("refresh"),h.$list.fadeIn()}):this.$list.html(c.join(""))},d.prototype.bindEvents=function(){return this.collection.on("add",this.onCollectionAdd),this.$el.on("pagebeforeshow",this.setActiveFuelTypeButton),this.user.on("change:myFuelType",this.onUserFuelTypeChanged)},d.prototype.close=function(){return this.off(),this.$el.off("pagebeforeshow"),this.collection.off("add",this.onCollectionAdd),this.user.off("change:myFuelType",this.onUserFuelTypeChanged),this.closeListItems()},d.prototype.closeListItems=function(){var a,b,c,d,e;if(this.listItems!=null){d=this.listItems,e=[];for(b=0,c=d.length;b<c;b++)a=d[b],e.push(a.close());return e}},d.prototype.setActiveFuelTypeButton=function(){var a,b,c;return c=this.user.get("myFuelType"),b=this.$el.find("#fueltypes .ui-btn"),a=b.filter(":has([data-fueltype='"+c+"'])"),b.not(a).removeClass("ui-btn-active"),a.addClass("ui-btn-active")},d.prototype.onUserFuelTypeChanged=function(){var a;return this.setActiveFuelTypeButton(),a=this.user.get("myFuelType"),this.renderList(!0)},d.prototype.onSelectFuelType=function(a){return this.user.set("myFuelType",$(a.target).attr("data-fueltype")),this.user.save()},d.prototype.onCollectionAdd=function(a){var b;return b=this.addStationListItem(a),this.$list.append(b.el),this.$list.listview("refresh")},d.prototype.addStationListItem=function(a){var b;return b=new Gaso.StationListItem({model:a}),this.listItems.push(b),b.render()},d}(Backbone.View)}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}},b=Object.prototype.hasOwnProperty,c=function(a,c){function e(){this.constructor=a}for(var d in c)b.call(c,d)&&(a[d]=c[d]);return e.prototype=c.prototype,a.prototype=new e,a.__super__=c.prototype,a};Gaso.StationListItem=function(b){function d(){this.close=a(this.close,this),d.__super__.constructor.apply(this,arguments)}return c(d,b),d.prototype.tagName="li",d.prototype.initialize=function(){return this.template=_.template(Gaso.util.getTemplate("station-list-item"))},d.prototype.render=function(a){return this.$el.html(this.template(this.model.toJSON())),this.bindEvents(),this},d.prototype.bindEvents=function(){return this.model.on("clear",this.close)},d.prototype.close=function(){return this.off(),this.model.off("clear",this.close)},d}(Backbone.View)}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}},b=Object.prototype.hasOwnProperty,c=function(a,c){function e(){this.constructor=a}for(var d in c)b.call(c,d)&&(a[d]=c[d]);return e.prototype=c.prototype,a.prototype=new e,a.__super__=c.prototype,a};Gaso.MenuPage=function(b){function d(b){this.user=b,this.close=a(this.close,this),this.template=_.template(Gaso.util.getTemplate("menu-page")),this.setElement($('<div id="page-menu"/>'))}return c(d,b),d.prototype.render=function(a){return $(this.el).html(this.template()),this},d.prototype.close=function(){return this.off},d}(Backbone.View)}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}},b=Object.prototype.hasOwnProperty,c=function(a,c){function e(){this.constructor=a}for(var d in c)b.call(c,d)&&(a[d]=c[d]);return e.prototype=c.prototype,a.prototype=new e,a.__super__=c.prototype,a};Gaso.StationDetailsView=function(b){function d(){this.addPriceEdit=a(this.addPriceEdit,this),this.displayAddress=a(this.displayAddress,this),this.close=a(this.close,this),this.getMapSettings=a(this.getMapSettings,this),d.__super__.constructor.apply(this,arguments)}return c(d,b),d.prototype.events={"click #saveButton":"savePrices","change #addOtherPrice select":"addOtherPriceEdit","click #small-map-canvas":"openLargeMap","tap #small-map-canvas":"openLargeMap"},d.prototype.initialize=function(){return this.template=_.template(Gaso.util.getTemplate("station-details")),this.setElement($('<div id="station-details"/>'))},d.prototype.getMapSettings=function(){return{zoom:16,mapTypeId:google.maps.MapTypeId.ROADMAP,disableDefaultUI:!0,draggable:!1,disableDoubleClickZoom:!0}},d.prototype.render=function(a){var b,c,d,e,f;this.priceEdits=[],this.$el.attr("data-add-back-btn","true"),this.$el.html(this.template(this.model.toJSON())),this.model.updateAddress(),this.map=new google.maps.Map(this.$el.find("#small-map-canvas")[0],this.getMapSettings()),b=(new Gaso.StationMarker(this.model,this.map)).render(),google.maps.event.clearInstanceListeners(b.marker),this.$prices=this.$el.find("#prices"),f=this.model.get("prices");for(d=0,e=f.length;d<e;d++)c=f[d],this.addPriceEdit(c);return this.bindEvents(),this},d.prototype.bindEvents=function(){var a=this;return this.$el.off("pageshow.stationdetailsview"),this.$el.on("pageshow.stationdetailsview",function(b){return google.maps.event.trigger(a.map,"resize"),a.map.setCenter(Gaso.geo.latLonTogMapLatLng(a.model.get("location")))}),this.model.on("change:address",this.displayAddress)},d.prototype.close=function(){var a,b,c,d,e;this.off,this.$el.off("pageshow.stationdetailsview"),this.model.off("change:address",this.displayAddress),d=this.priceEdits,e=[];for(b=0,c=d.length;b<c;b++)a=d[b],e.push(a.close());return e},d.prototype.displayAddress=function(){var a;return a=$(this.template(this.model.toJSON())),this.$el.find(".address").fadeOut(function(){var b;return b=$(this),b.hide(),b.html(a.find(".address").html()),b.fadeIn()})},d.prototype.savePrices=function(){var a,b,c,d;d=this.priceEdits;for(b=0,c=d.length;b<c;b++)a=d[b],a.updateModel();return this.model.save()},d.prototype.addPriceEdit=function(a,b){var c,d,e,f;d={animate:!1},f=_.extend({},d,b),e=new Gaso.StationPriceEdit(this.model,a),this.priceEdits.push(e),c=e.render().$el,f.animate&&c.hide(),this.$prices.append(c);if(f.animate)return c.addClass("ui-field-contain ui-body ui-br").trigger("create"),c.slideDown()},d.prototype.addOtherPriceEdit=function(a){var b,c,d;b=$(a.target),d=b.val();if(d)return c={type:b.val()},b.find(":selected").remove(),b.val("").selectmenu("refresh"),this.addPriceEdit(c,{animate:!0})},d.prototype.openLargeMap=function(){return Gaso.app.router.navigate("stationmap/"+this.model.id,{trigger:!0})},d}(Backbone.View)}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}},b=Object.prototype.hasOwnProperty,c=function(a,c){function e(){this.constructor=a}for(var d in c)b.call(c,d)&&(a[d]=c[d]);return e.prototype=c.prototype,a.prototype=new e,a.__super__=c.prototype,a};Gaso.UserSettingsPage=function(b){function d(b){this.user=b,this.close=a(this.close,this),this.template=_.template(Gaso.util.getTemplate("user-settings-page")),this.setElement($('<div id="page-user-settings"/>'))}return c(d,b),d.prototype.render=function(a){return $(this.el).html(this.template(this.user.toJSON())),this},d.prototype.close=function(){return this.off()},d}(Backbone.View)}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}},b=Object.prototype.hasOwnProperty,c=function(a,c){function e(){this.constructor=a}for(var d in c)b.call(c,d)&&(a[d]=c[d]);return e.prototype=c.prototype,a.prototype=new e,a.__super__=c.prototype,a};Gaso.MapPage=function(b){function d(b,c){this.stations=b,this.user=c,this.findNearbyStations=a(this.findNearbyStations,this),this.findNearbyStationsThrottled=a(this.findNearbyStationsThrottled,this),this.addStationMarker=a(this.addStationMarker,this),this.saveMapLocation=a(this.saveMapLocation,this),this.changeMapLocation=a(this.changeMapLocation,this),this.getInitialMapSettings=a(this.getInitialMapSettings,this),this.close=a(this.close,this),this.render=a(this.render,this),this.stationMarkers=[],this.template=_.template(Gaso.util.getTemplate("map-page")),this.setElement($('<div id="page-map"/>'))}return c(d,b),d.prototype.render=function(){var a,b,c,d;this.$el.html(this.template(this.stations.toJSON())),this.map=new google.maps.Map(this.$el.find("#map-canvas")[0],this.getInitialMapSettings()),this.userMarker=(new Gaso.UserMarker(this.user,this.map)).render(),d=this.stations.models;for(b=0,c=d.length;b<c;b++)a=d[b],this.addStationMarker(a);return this.bindEvents(),this},d.prototype.bindEvents=function(){var a=this;return Gaso.log("Bind events to",this),google.maps.event.addListener(this.map,"dragend",function(){return a.saveMapLocation(),a.findNearbyStationsThrottled()()}),google.maps.event.addListener(this.map,"zoom_changed",function(){return a.user.set("mapZoom",a.map.getZoom()),a.user.save(),Gaso.log("Zoom level set to",a.user.get("mapZoom"))}),this.$el.off("pageshow.mappage"),this.$el.on("pageshow.mappage",function(b){var c;return Gaso.log("Resize map"),google.maps.event.trigger(a.map,"resize"),c=a.user.get("mapCenter"),a.map.setCenter(new google.maps.LatLng(c.lat,c.lon))}),this.stations.on("add",this.addStationMarker),this.user.on("reCenter",this.changeMapLocation)},d.prototype.close=function(){var a,b,c,d,e;this.off(),this.stations.off("add",this.addStationMarker),this.user.off("reCenter",this.changeMapLocation),this.userMarker.close(),d=this.stationMarkers,e=[];for(b=0,c=d.length;b<c;b++)a=d[b],e.push(a.close());return e},d.prototype.getInitialMapSettings=function(){return{zoom:this.user.get("mapZoom"),mapTypeId:google.maps.MapTypeId[this.user.get("mapTypeId")]}},d.prototype.changeMapLocation=function(){var a;return a=this.user.get("mapCenter"),Gaso.log("Pan map to",a),this.map.panTo(new google.maps.LatLng(a.lat,a.lon)),this.findNearbyStations()},d.prototype.saveMapLocation=function(){var a;return a=this.map.getCenter(),this.user.set("mapCenter",{lat:a.lat(),lon:a.lng()}),this.user.save()},d.prototype.addStationMarker=function(a){return this.stationMarkers.push((new Gaso.StationMarker(a,this.map)).render())},d.prototype.findNearbyStationsThrottled=function(){return _.throttle(this.findNearbyStations,2e3)},d.prototype.findNearbyStations=function(){var a,b=this;Gaso.log("Find nearby stations"),a=this.map.getBounds();if(a==null){setTimeout(function(){return b.findNearbyStations()},2e3);return}return this.user.get("mapZoom")>=7?Gaso.helper.findStationsWithinGMapBounds(a):Gaso.log("Zoomed too far out, not fetching stations")},d}(Backbone.View)}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}},b=Object.prototype.hasOwnProperty,c=function(a,c){function e(){this.constructor=a}for(var d in c)b.call(c,d)&&(a[d]=c[d]);return e.prototype=c.prototype,a.prototype=new e,a.__super__=c.prototype,a};Gaso.StationMarker=function(b){function d(b,c){this.model=b,this.map=c,this.showInfo=a(this.showInfo,this),this.close=a(this.close,this),this.render=a(this.render,this)}return c(d,b),d.prototype.render=function(){var a,b,c;return b=this.model.get("location"),c={map:this.map,title:this.model.get("name"),position:new google.maps.LatLng(b[1],b[0]),animation:google.maps.Animation.DROP},a=this.model.get("brand"),a&&(c.icon="images/stationlogos/"+a+"_50.png"),this.marker=new google.maps.Marker(c),google.maps.event.addListener(this.marker,"click",this.showInfo),this},d.prototype.close=function(){},d.prototype.showInfo=function(){return Gaso.app.router.navigate("stations/"+this.model.id,{trigger:!0})},d}(Backbone.View)}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}},b=Object.prototype.hasOwnProperty,c=function(a,c){function e(){this.constructor=a}for(var d in c)b.call(c,d)&&(a[d]=c[d]);return e.prototype=c.prototype,a.prototype=new e,a.__super__=c.prototype,a};Gaso.StationPriceEdit=function(b){function d(b,c){this.model=b,this.price=c,this.close=a(this.close,this),this.template=_.template(Gaso.util.getTemplate("price-edit")),this.setElement($('<div data-role="fieldcontain"/>'))}return c(d,b),d.prototype.render=function(a){return this.$el.html(this.template(this.price)),this},d.prototype.updateModel=function(){return this.model.updatePrice(this.price.type,this.$(".price-input").val())},d.prototype.close=function(){return this.off},d}(Backbone.View)}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}},b=Object.prototype.hasOwnProperty,c=function(a,c){function e(){this.constructor=a}for(var d in c)b.call(c,d)&&(a[d]=c[d]);return e.prototype=c.prototype,a.prototype=new e,a.__super__=c.prototype,a};Gaso.StationMapPage=function(b){function d(){this.getInitialMapSettings=a(this.getInitialMapSettings,this),this.close=a(this.close,this),this.render=a(this.render,this),d.__super__.constructor.apply(this,arguments)}return c(d,b),d.prototype.initialize=function(){return console.log("model",this.model),this.template=_.template(Gaso.util.getTemplate("station-map-page")),this.setElement($('<div id="page-station-map"/>'))},d.prototype.render=function(){var a;return this.$el.html(this.template(this.model.toJSON())),this.$el.attr("data-add-back-btn","true"),this.map=new google.maps.Map(this.$el.find("#station-map-canvas")[0],this.getInitialMapSettings()),a=(new Gaso.StationMarker(this.model,this.map)).render(),google.maps.event.clearInstanceListeners(a.marker),this.bindEvents(),this},d.prototype.bindEvents=function(){var a=this;return this.$el.off("pageshow.stationmappage"),this.$el.on("pageshow.stationmappage",function(b){return google.maps.event.trigger(a.map,"resize"),a.map.setCenter(new google.maps.LatLng(a.model.get("location")[1],a.model.get("location")[0]))})},d.prototype.close=function(){return this.off},d.prototype.getInitialMapSettings=function(){return{zoom:16,mapTypeId:google.maps.MapTypeId.ROADMAP}},d}(Backbone.View)}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}},b=Object.prototype.hasOwnProperty,c=function(a,c){function e(){this.constructor=a}for(var d in c)b.call(c,d)&&(a[d]=c[d]);return e.prototype=c.prototype,a.prototype=new e,a.__super__=c.prototype,a};Gaso.UserMarker=function(b){function d(b,c){this.model=b,this.map=c,this.getCircleRadius=a(this.getCircleRadius,this),this.updatePosition=a(this.updatePosition,this),this.renderAccuracyIndicator=a(this.renderAccuracyIndicator,this),this.renderLocationIndicator=a(this.renderLocationIndicator,this),this.close=a(this.close,this),this.bindEvents=a(this.bindEvents,this),this.render=a(this.render,this)}return c(d,b),d.prototype.render=function(){return this.renderLocationIndicator(),this.renderAccuracyIndicator(),this.bindEvents(),this},d.prototype.bindEvents=function(){return this.model.on("change:position change:positionAccuracy",this.updatePosition)},d.prototype.close=function(){return this.model.off("change:position change:positionAccuracy",this.updatePosition)},d.prototype.renderLocationIndicator=function(){var a,b,c;return c=this.model.get("position"),a=new google.maps.MarkerImage("images/blue_ball16.png",new google.maps.Size(16,16),new google.maps.Point(0,0),new google.maps.Point(8,8)),b={map:this.map,title:"My location"+(this.getCircleRadius()==null?" (inaccurate)":""),position:new google.maps.LatLng(c.lat,c.lon),icon:a,animation:google.maps.Animation.DROP},this.marker=new google.maps.Marker(b)},d.prototype.renderAccuracyIndicator=function(){var a,b;return b=this.model.get("position"),a={map:this.map,strokeColor:"#33a3f3",strokeOpacity:.6,strokeWeight:1,fillColor:"#33a3f3",fillOpacity:.3,center:new google.maps.LatLng(b.lat,b.lon),radius:this.getCircleRadius()},this.circle=new google.maps.Circle(a)},d.prototype.updatePosition=function(){var a,b;if(this.marker==null)return;return a=this.model.get("position"),Gaso.log("Update user marker location",a),b=new google.maps.LatLng(a.lat,a.lon),this.marker.setPosition(b),this.circle.setCenter(b),this.circle.setRadius(this.getCircleRadius())},d.prototype.getCircleRadius=function(){return this.model.isPositionAccurate()?this.model.get("positionAccuracy"):null},d}(Backbone.View)}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}},b=Object.prototype.hasOwnProperty,c=function(a,c){function e(){this.constructor=a}for(var d in c)b.call(c,d)&&(a[d]=c[d]);return e.prototype=c.prototype,a.prototype=new e,a.__super__=c.prototype,a};Gaso.AppRouter=function(b){function d(){this.refuel=a(this.refuel,this),d.__super__.constructor.apply(this,arguments)}return c(d,b),d.prototype.routes={"":"showMap","/":"showMap",map:"showMap",list:"showList",menu:"showMenu",search:"search",settings:"settings","stations/:id":"stationDetails","stationmap/:id":"stationMap","stations/:id/refuel":"refuel"},d.prototype.initialize=function(){this.initModels(),Gaso.helper=new Gaso.Helper(this.user,this.stations,this.searchContext),this.initViews(),this.bindEvents()},d.prototype.initModels=function(){return this.searchContext=new Gaso.SearchContext,this.stations=new Gaso.StationsList,this.user=new Gaso.User,this.user.fetch()},d.prototype.initViews=function(){return this.listPage=new Gaso.StationsListPage(this.stations,this.user),this.settingsPage=new Gaso.UserSettingsPage(this.user),this.mapPage=new Gaso.MapPage(this.stations,this.user),this.menuPage=new Gaso.MenuPage(this.user)},d.prototype.bindEvents=function(){var a,b;return b=this,a=$(document),a.on("click",'.back, [data-rel="back"]',function(a){return window.history.back(),a.preventDefault()}),a.on("pagehide",'div[data-role="page"]',function(a){var c;return Gaso.log("Remove page",this),Gaso.log("Call 'close' to ",b.prevPage),(c=b.prevPage)!=null&&c.close(),$(this).remove(),b.prevPage=b.currentPage})},d.prototype.search=function(){return this.changePage(this.settingsPage)},d.prototype.showList=function(){return this.changePage(this.listPage)},d.prototype.settings=function(){return this.changePage(this.settingsPage)},d.prototype.showMap=function(){return this.changePage(this.mapPage)},d.prototype.showMenu=function(){return this.changePage(this.menuPage)},d.prototype.stationDetails=function(a){return this.refuel(a)},d.prototype.stationMap=function(a){var b;b=this.stations.get(a);if(b!=null)return this.changePage(new Gaso.StationMapPage({model:b}))},d.prototype.refuel=function(a){var b;return b=this.stations.get(a),b!=null?this.changePage(new Gaso.StationDetailsView({model:b,refuel:!0})):(Gaso.log("TODO Station not loaded, redirecting to listing for now"),this.navigate("list",{trigger:!0,replace:!0}))},d.prototype.changePage=function(a){var b,c;return Gaso.log("Change to page",a),b=$(a.el),b.attr("data-role","page"),a.render(),$("body").append(b),c=this.currentPage==null?"none":a.transition||$.mobile.defaultPageTransition,this.currentPage=a,$.mobile.changePage(b,{changeHash:!1,transition:c})},d}(Backbone.Router)}.call(this),function(){_.templateSettings={interpolate:/\{\{(.+?)\}\}/g,evaluate:/<%([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g},window.socket=io.connect("/"),Gaso.util.loadTemplates([],function(){return Gaso.log("Templates loaded"),$(function(){return Gaso.app.router=new Gaso.AppRouter,Backbone.history.start()})})}.call(this),function(){}.call(this)
